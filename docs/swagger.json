{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/benefits": {
            "get": {
                "description": "Retrieves benefits based on query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benefits"
                ],
                "summary": "Get benefits",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category of the benefit",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Minimum price of the benefit",
                        "name": "min_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Maximum price of the benefit",
                        "name": "max_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of benefits",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Benefit"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new benefit to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benefits"
                ],
                "summary": "Add a new benefit",
                "parameters": [
                    {
                        "description": "Benefit to add",
                        "name": "benefit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Benefit"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Benefit created",
                        "schema": {
                            "$ref": "#/definitions/main.Benefit"
                        }
                    },
                    "400": {
                        "description": "Invalid benefit format",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/benefits/{benefit_id}/buy": {
            "post": {
                "description": "Buys a benefit for a user, deducting from their wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benefits"
                ],
                "summary": "Buy a benefit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benefit ID",
                        "name": "benefit_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User ID",
                        "name": "user_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Purchased benefit",
                        "schema": {
                            "$ref": "#/definitions/main.OwnedBenefit"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format or insufficient funds",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/benefits/{id}": {
            "get": {
                "description": "Retrieves a single benefit by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benefits"
                ],
                "summary": "Get a single benefit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benefit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Single benefit",
                        "schema": {
                            "$ref": "#/definitions/main.Benefit"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Benefit not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a benefit by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benefits"
                ],
                "summary": "Update a benefit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benefit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated benefit information",
                        "name": "benefit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Benefit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Benefit updated successfully",
                        "schema": {
                            "$ref": "#/definitions/main.Benefit"
                        }
                    },
                    "400": {
                        "description": "Invalid ID or benefit format",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Benefit not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a benefit by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benefits"
                ],
                "summary": "Delete a benefit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benefit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Benefit deleted successfully",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/wallets": {
            "get": {
                "description": "Retrieves all wallets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Get all wallets",
                "responses": {
                    "200": {
                        "description": "List of wallets",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Wallet"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/wallets/grant": {
            "post": {
                "description": "Grants tokens to a user's wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Grant tokens to a wallet",
                "parameters": [
                    {
                        "description": "User ID",
                        "name": "user_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Amount of tokens to grant",
                        "name": "amount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated wallet",
                        "schema": {
                            "$ref": "#/definitions/main.Wallet"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/wallets/{id}": {
            "get": {
                "description": "Retrieves a wallet by the user's ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Get wallet by user ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's wallet",
                        "schema": {
                            "$ref": "#/definitions/main.Wallet"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.Benefit": {
            "type": "object",
            "properties": {
                "category": {
                    "description": "Changed to string",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "expirationDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "inStock": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                }
            }
        },
        "main.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "main.OwnedBenefit": {
            "type": "object",
            "properties": {
                "benefitId": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "expirationDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "purchased": {
                    "type": "string"
                }
            }
        },
        "main.Wallet": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "money_balance": {
                    "type": "number"
                },
                "token_balance": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}